I"0<<h3 id="apa-itu-graphql">Apa itu graphQL</h3>
<p>GraphQL adalah sebuah konsep baru dalam  membangun api. GraphQL (Query Language) yang di develop oleh <code class="language-plaintext highlighter-rouge">facebook</code>.<br />
di implementasikan pada sisi server. Meskipun sebuah query language graphQL ini tidak secara langsung berhubungan dengan database server, dengan kata lain GraphQL ini tidak terbatas untuk database tertentu di platform tertentu, baik itu <code class="language-plaintext highlighter-rouge">SQL</code> ataupun <code class="language-plaintext highlighter-rouge">noSQL</code>.<br />
posisi GraphQL ini berada di sisi client dan server yang berhubungan / mengakses suatu API. Salah satu tujuan pengembangan bahasa query ini adalah untuk memudahkan komunikasi data antara beckend dan frontend / mobile aplikasi.</p>

<p><img src="http://localhost:4000/assets/images/post/graphql-post.png" alt="graphQL" /></p>

<p>GraphQL ini dapat di implementasikan di segala sisi client seperti :</p>
<ul>
  <li>react</li>
  <li>vue</li>
  <li>meteor</li>
  <li>dll</li>
</ul>

<p>karena graphQL ini hanya penerjemah (query language) dan runtime saja, maka tidak bergantung pada bahasa pemrogramman sisi server dan database apapun, bisa cek link berikut : <a href="https://graphql.org/code/">GraphQL</a></p>

<h3 id="selanjutnya-">selanjutnya …</h3>
<p>Dalam artikel kali ini ! gout masih menggunakan framework gatsbyJS dari react, masih meraba-raba di tengah kebutaan.<br />
mungkin di artikel kali ini gout hanya sedikit merekam dokumentasi dalam pembuatan single page posts di gatsbyJS.<br />
pertama gout mengelola query di graphql gatsbyJS.</p>

<p>buka user interface graphql <code class="language-plaintext highlighter-rouge">localhost:8000/___graphql</code> 
sebelum melakukan testing query untuk binding data di gatsby, kita mau ubah view user interface dari graphql nya dulu untuk menambah user experience dalam mengelola gatsby graphql ini dengan tampilan <code class="language-plaintext highlighter-rouge">playground</code> :</p>

<p><strong><em>stop service gatsbyny terlebih dahulu <code class="language-plaintext highlighter-rouge">ctrl+c</code></em></strong> kemudian install packagenya :</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">--save-dev</span> cross-env env-cmd
</code></pre></div></div>
<p>kemudian tambahkan package yang tadi di install, ke file <code class="language-plaintext highlighter-rouge">package.json</code> di direktori root</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">"develop"</span><span class="p">:</span><span class="w"> </span><span class="s2">"gatsby develop"</span><span class="w">
</span></code></pre></div></div>
<p>tambahkan package instance berikut : <code class="language-plaintext highlighter-rouge">json "GATSBY_GRAPHQL_IDE=playground"</code><br />
kemudian buat file baru dengan properti hidden di root direktori dengan nama <code class="language-plaintext highlighter-rouge">shell .env.development</code><br />
kemudian tambahkan baris script berikut <code class="language-plaintext highlighter-rouge">env GATSBY_GRAPHQL_IDE=playground</code>  . jalankan kembali server gatsbyJS nya <code class="language-plaintext highlighter-rouge">shell npm run develop</code></p>

<p>kemudian buka kembali user interface graphql di link : <code class="language-plaintext highlighter-rouge">localhost:8000/___graphql</code><br />
seperti inilah tampilan graphql dengan package user interface playground:</p>

<p><img src="http://localhost:4000/assets/images/post/graphql-ui-gatsby.png" alt="graphQL" /></p>

<p>lakukan query diataranya untuk binding data dan melakukan slug untuk data di page posts nanti yang akan kita buat di bagian selanjutnya : 
gout melakukan beberapa query sepert dibawah ini, tambahkan query di box sebelah kiti :</p>

<div class="language-graphql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">//</span><span class="w"> </span><span class="k">query</span><span class="w"> </span><span class="n">untuk</span><span class="w"> </span><span class="n">metadata</span><span class="w">
</span><span class="n">query</span><span class="p">{</span><span class="w">
  </span><span class="n">site</span><span class="p">{</span><span class="w">
    </span><span class="n">siteMetadata</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">title</span><span class="w">
      </span><span class="n">author</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">


</span><span class="err">//</span><span class="k">query</span><span class="w"> </span><span class="n">buat</span><span class="w"> </span><span class="n">markdown</span><span class="w">
</span><span class="n">query</span><span class="p">{</span><span class="w">
  </span><span class="n">allFile</span><span class="p">{</span><span class="w">
    </span><span class="n">edges</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">node</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="n">name</span><span class="w">
        </span><span class="n">extension</span><span class="w">
        </span><span class="n">dir</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="err">//</span><span class="w"> </span><span class="err">get</span><span class="w"> </span><span class="err">slug</span><span class="w"> </span><span class="err">post</span><span class="w"> </span><span class="err">page</span><span class="w"> 
</span><span class="k">query</span><span class="p">{</span><span class="w">
  </span><span class="n">allMarkdownRemark</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">edges</span><span class="p">{</span><span class="w">
      </span><span class="n">node</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="n">fields</span><span class="w"> </span><span class="p">{</span><span class="w">
          </span><span class="n">slug</span><span class="w">
        </span><span class="p">}</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="err">//</span><span class="w"> </span><span class="err">get</span><span class="w"> </span><span class="err">single</span><span class="w"> </span><span class="err">slug</span><span class="w"> </span><span class="err">posts</span><span class="w"> </span><span class="err">tamplate</span><span class="w">

</span><span class="k">query</span><span class="w"> </span><span class="p">(</span><span class="w">
  </span><span class="nv">$slug</span><span class="p">:</span><span class="w"> </span><span class="nb">String</span><span class="p">!</span><span class="w">
</span><span class="p">){</span><span class="w">
  </span><span class="n">markdownRemark</span><span class="w"> </span><span class="p">(</span><span class="w">
    </span><span class="n">fields</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">slug</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="n">eq</span><span class="p">:</span><span class="w"> </span><span class="nv">$slug</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">){</span><span class="w">
    </span><span class="n">frontmatter</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="n">title</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>
<p>kalian bisa telah sendiri hasil dari query graphQL diatas, untuk slug dan binding data. kalian coba telaah secara lebih spesifik. seperti ini contohnya :</p>

<p><img src="http://localhost:4000/assets/images/post/graphql-post.png" alt="graphQL" /><br />
query diatas untuk binding metadata untuk di query di bagian page. kalian bisa coba baris perbaris atau buka perbaris dari script graphql diatas di tab baru di user interfacenya graphql.</p>

<h4 id="kemudian-selanjutnya-lagi-">kemudian selanjutnya lagi !</h4>
<p>selanjutnya ….. mulailah untuk membaca dokumentasinya, karena dalam artikel kali ini gout mau binding data di page gatsby untuk menyajikan fitur blog dengan gatsby.</p>
<ul>
  <li>
    <p>binding data untuk posts list di page blog
ini mengurutkan list post yang kita create di direktori root untuk posts kita. pertama kita buat dulu satu direktori baru di direktori <code class="language-plaintext highlighter-rouge">src/</code> dengan nama <code class="language-plaintext highlighter-rouge">posts/</code>, tambahkan beberapa file sebagai example post 
misalnya gout buat file <code class="language-plaintext highlighter-rouge">first-post.md</code> format penulisan post dengan markdown. setelah itu kita buka lagi direktori <code class="language-plaintext highlighter-rouge">pages</code> masih di direktori view utama gatsbyJS yaitu <code class="language-plaintext highlighter-rouge">src</code> tambahkan satu file baru dengan nama <code class="language-plaintext highlighter-rouge">blog.js</code> =&gt; di file ini nanti list post ditampilkan, disajikan dalam order list item yang di link ke post yang telah kita buat.</p>

    <ul>
      <li>buka file <code class="language-plaintext highlighter-rouge">blog.js</code>
tambahkan baris code berikut :
        <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span>

    <span class="k">import</span> <span class="p">{</span> <span class="nx">graphql</span><span class="p">,</span> <span class="nx">useStaticQuery</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">gatsby</span><span class="dl">'</span>

    <span class="k">import</span> <span class="p">{</span> <span class="nx">Link</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">gatsby</span><span class="dl">'</span>

    <span class="k">import</span> <span class="nx">Layout</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">../components/layout</span><span class="dl">'</span>



    <span class="kd">const</span> <span class="nx">BlogPage</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>

      <span class="kd">const</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">useStaticQuery</span><span class="p">(</span><span class="nx">graphql</span><span class="s2">`
        query {
          allMarkdownRemark {
            edges {
              node {
                frontmatter {
                  title
                  date
                }
                fields {
                  slug
                }
              }
            }
          }
        }
        `</span><span class="p">)</span>

      <span class="c1">//console.log(data);</span>

      <span class="k">return</span> <span class="p">(</span>
        <span class="o">&lt;</span><span class="nx">Layout</span><span class="o">&gt;</span>
          <span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">My</span> <span class="nx">Blog</span><span class="o">&lt;</span><span class="sr">/h1</span><span class="err">&gt;
</span>          <span class="o">&lt;</span><span class="nx">ol</span><span class="o">&gt;</span>
            <span class="p">{</span><span class="nx">data</span><span class="p">.</span><span class="nx">allMarkdownRemark</span><span class="p">.</span><span class="nx">edges</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="nx">edge</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
              <span class="k">return</span> <span class="p">(</span>
                <span class="o">&lt;</span><span class="nx">li</span><span class="o">&gt;</span>
                  <span class="o">&lt;</span><span class="nx">Link</span> <span class="nx">to</span><span class="o">=</span><span class="p">{</span><span class="s2">`/blog/</span><span class="p">${</span><span class="nx">edge</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">fields</span><span class="p">.</span><span class="nx">slug</span><span class="p">}</span><span class="s2">`</span><span class="p">}</span><span class="o">&gt;</span>
                  <span class="o">&lt;</span><span class="nx">h2</span><span class="o">&gt;</span><span class="p">{</span><span class="nx">edge</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">frontmatter</span><span class="p">.</span><span class="nx">title</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/h2</span><span class="err">&gt;
</span>                  <span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">{</span><span class="nx">edge</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">frontmatter</span><span class="p">.</span><span class="nx">date</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span>                  <span class="o">&lt;</span><span class="sr">/Link</span><span class="err">&gt;
</span>                <span class="o">&lt;</span><span class="sr">/li</span><span class="err">&gt;
</span>                <span class="p">)</span>
              <span class="p">})}</span>
          <span class="o">&lt;</span><span class="sr">/ol</span><span class="err">&gt;
</span>        <span class="o">&lt;</span><span class="sr">/Layout</span><span class="err">&gt;
</span>        <span class="p">)</span>
    <span class="p">}</span>
    <span class="k">export</span> <span class="k">default</span> <span class="nx">BlogPage</span>
</code></pre></div>        </div>
        <p>file tersebut akan menampilkan daftar baris post di link <code class="language-plaintext highlighter-rouge">/blog/</code> seperti dibawah ini : 
<img src="http://localhost:4000/assets/images/post/graphql-post.png" alt="graphQL" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>binding data untuk single posts page</p>
  </li>
</ul>

<p>waasalamm….</p>

<p><strong><em>puji ermanto</em></strong></p>

:ET