I"R$<p><img src="http://localhost:4000/assets/images/post/laradock2.png" alt="nodeJS_webserver" /></p>

<h3 id="lingkungan-development-dengan-laradock">Lingkungan development dengan Laradock</h3>
<p>Sekarang ini sudah semakin mudah para developer dalam membangun aplikasi nya, berbagai macam tools yang semakin memudahkan para developer dalam berkarya dan bekerja. salah satunya adalah yang akan kita bahas di artikel kali ini yaitu <strong>Laradock</strong> Sepertinya bagi kalangan developer sudah tidak terdengar asing yah, seperti gabungan dari kata <strong>laravel</strong> dan <strong>docker</strong>. 
kali ini gout akan mencoba mengembangkan aplikasi dalam lingkungan kerja <strong>laradock</strong> ini, apa saja syaratnya (bagi pengguna linux):</p>
<ol>
  <li>sudah terinstall composer</li>
  <li>sudah terinstall git<br />
diasumsikan kalian pun sudah menginstall kedua tools andalan diatas. sehingga selanjutnya gout akan melanjutkan membahas mengenai proses install dockernya.</li>
</ol>

<h3 id="instalasi-docker">Instalasi Docker</h3>
<p>Docker memiliki dua versi yaitu Community Edition (CE) dan Enterprise Edition (EE). Kita akan menggunakan
versi Community Edition.</p>
<ul>
  <li>Untuk Mac https://store.docker.com/editions/community/docker-ce-desktop-mac</li>
  <li>Untuk Ubuntu https://store.docker.com/editions/community/docker-ce-server-ubuntu</li>
  <li>Petunjuk detail instalasi di ubuntu https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-using-the-repository</li>
  <li>Untuk OS lainnya silahkan lihat langsung di https://www.docker.com/community-edition.</li>
</ul>

<h4 id="install-docker-compose">Install Docker Compose</h4>
<p>karena disini kita sebagai pengguna linux maka diperlukan untuk menginstall tools yang satu ini yaitu <strong>Docker Compose</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
</code></pre></div></div>
<blockquote>
Gunakan versi terbaru, contoh di atas menggunakan versi 1.21.2, kamu juga boleh mengecek versi
terbaru yang tersedia di link ini https://github.com/docker/compose/releases
</blockquote>

<p>Selanjutnya buat permision untuk mengijinkan docker-compose tadi menjadi executable</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chmod +x /usr/local/bin/docker-compose
</code></pre></div></div>
<p>cek apakah installasi docker-compose sudah berhasil</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose --version
</code></pre></div></div>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose version 1.21.2, build 1719ceb
</code></pre></div></div>

<h4 id="menyiapkan-lingkungan-kerja-laradock">Menyiapkan lingkungan kerja Laradock</h4>
<p>Nah karena sekarang Docker dan Git sudah terinstal di sistem kita, selanjutnya kita siap menggunakan
Laradock.<br />
Oke langsung saja kita eksekusi, seperti biasa buka dulu senjata andalan kita yaitu terminal (CMD) atau (Command Prompt) heheheh.<br />
buat direktori baru dengan nama <strong>laravel-projects</strong></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mkdir -p laravel-projects
</code></pre></div></div>
<p>direktori ini akan kita gunakan untuk menaruh setiap project yang akan kita bangun dalam lingkungan laradock ini terkhusus yang menggunakan framework laravel, karena fitur laradock ini lengkap, paket lengkap seperti lamp hanya saja dalam kerangka yang modern.</p>

<p><strong><em>Lanjut â€¦</em></strong><br />
ok lanjut kita akses direktori yang tadi kita buat</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd laravel-projects/
</code></pre></div></div>
<p>jika sudah ada di direktori project kita selanjutnya kita clone package laradock nya dari github</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/Laradock/laradock.git
</code></pre></div></div>
<p>setelah proses <strong><em>cloning</em></strong> selesai akses direktori <strong><em>laradock</em></strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>chmod -R 755 laradock/.*
cd laradock/
</code></pre></div></div>

<p>ubah env-example menjadi .env</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cp env-example .env
</code></pre></div></div>

<p>Kemudian selanjutnya mengaktifkan container untuk laradock</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose up -d nginx mysql phpmyadmin redis workspace
</code></pre></div></div>
<p>dan untuk selanjutnya setiap kali kita akan memulai development kita gunakan perintah diatas untuk mengaktifkan container laradock, Minimal kita perlu menyalakan service nginx, mysql, phpmyadmin dan redis karena kita akan memerlukan ke empat service tersebut.</p>

<p>Lanjut buka file .env, lalu tambahkan kode berikut ini :</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DB_HOST=mysql
REDIS_HOST=redis
QUEUE_HOST=beanstalkd
</code></pre></div></div>

<p>sampai disini proses instalasi laradock nampaknya sudah selesai, untuk mengeceknya kalian bisa buka di browser dengan mengetikan alamat di address bar ke http://localhost. 
laradockmu telah siap! Jika kamu melihat halaman 404 not found, jangan takut! Justru itu menandakan docker telah berhasil menjalankan web server nginx. Lanjutkan. Error 404 tersebut dikarenakan kita belum membuat project atau file apapun.</p>

<p>Untuk membuka phpmyadmin, klik http://localhost:8080, masukan mysql sebagai host, root sebagai
username dan password.</p>

<h4 id="docker-mengatasi-bug-pada-mysql">Docker: Mengatasi Bug Pada MySQL</h4>
<p>Terdapat bug terkait mysql versi 8.0, selengkapnya silakan baca pada tautan
berikut: https://github.com/laradock/laradock/issues/1392, maka sebaiknya kita downgrade versi dari mysql
yang sebelumnya latest menjadi versi 5.7. Untuk melakukannya, edit file .env.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>file: .env
// ubah bagian ini
# MYSQL_VERSION=latest
MYSQL_VERSION=5.7
</code></pre></div></div>
<p>Kemudian, masih pada file .env, ubah lokasi di mana data mysql disimpan, dari ~/.laradock/data
menjadi misalnya: ~/.laradock/data2.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>file: .env
// cari baris berikut
# DATA_PATH_HOST=~/.laradock/data
DATA_PATH_HOST=~/.laradock/data2
</code></pre></div></div>
<p>Pada terminal folder laradock jalankan perintah <code class="language-plaintext highlighter-rouge">docker-compose down</code> untuk memastikan semua
container tidak sedang berjalan.</p>

<p>Lalu build ulang container mysql dengan menjalankan perintah berikut.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose build mysql
</code></pre></div></div>
<p>Solusi yang lain adalah dengan menggunakan fitur upgrade dari mysql untuk mengatasi masalah ini.
Caranya, masuk ke container mysql</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker exec -it mysql bash

mysql -u root -p
mysql&gt; SET GLOBAL innodb_fast_shutdown = 1;
mysql_upgrade -u root -p
</code></pre></div></div>

<p>Dan silakan dicoba login lagi.</p>

<blockquote>
Catatan: bagian ini tidak perlu kamu lakukan jika memang pada saat kamu instalasi laradock secara
normal kamu sudah bisa login ke phpmyadmin. Mungkin perlu saya koreksi, bahwa permasalahan ini
terjadi salah satunya karena perbedaan penggunaan plugin authentication password dimana pada
versi 5.7 ke bawah secara default mysql menggunakan mysql_native_password sedangkan pada versi
8.0 ke atas yang digunakan adalah caching_sha2_password
</blockquote>

<h2 id="membuat-project-laravel-baru">Membuat project Laravel Baru</h2>
<p>Dan sekarang kita masuk ke inti dari artikel ini, yaitu memulai project baru dengan laravel di dalam lingkungan kerja laradock.<br />
seperti biasa kita buka terminal terlebih dahulu atau jika menggunakan visual studio code bisa gunakan terminal di vscode.</p>

<ul>
  <li>Masuk ke folder(direktori) Laradock
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd laravel-project/laradock
</code></pre></div>    </div>
  </li>
  <li>Lalu aktifkan mode workspace laradock
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose exec --user=laradock workspace bash
</code></pre></div>    </div>
    <p>setiap kita ingin membuat project pastikan kita ada didalam workspae laradock jika kita ingin menggunakan laradock sebagai environment development</p>
  </li>
</ul>

<p><strong><em>Wassallaam</em></strong></p>
:ET