I"s3<h3 id="apa-itu-graphql">Apa itu graphQL</h3>
<p>GraphQL adalah sebuah konsep baru dalam  membangun api. GraphQL (Query Language) yang di develop oleh <code class="language-plaintext highlighter-rouge">facebook</code>.<br />
di implementasikan pada sisi server. Meskipun sebuah query language graphQL ini tidak secara langsung berhubungan dengan database server, dengan kata lain GraphQL ini tidak terbatas untuk database tertentu di platform tertentu, baik itu <code class="language-plaintext highlighter-rouge">SQL</code> ataupun <code class="language-plaintext highlighter-rouge">noSQL</code>.<br />
posisi GraphQL ini berada di sisi client dan server yang berhubungan / mengakses suatu API. Salah satu tujuan pengembangan bahasa query ini adalah untuk memudahkan komunikasi data antara beckend dan frontend / mobile aplikasi.</p>

<p><img src="http://localhost:4000/assets/images/post/graphql-post.png" alt="graphQL" /></p>

<p>GraphQL ini dapat di implementasikan di segala sisi client seperti :</p>
<ul>
  <li>react</li>
  <li>vue</li>
  <li>meteor</li>
  <li>dll</li>
</ul>

<p>karena graphQL ini hanya penerjemah (query language) dan runtime saja, maka tidak bergantung pada bahasa pemrogramman sisi server dan database apapun, bisa cek link berikut : <a href="https://graphql.org/code/">GraphQL</a></p>

<h3 id="selanjutnya-">selanjutnya …</h3>
<p>Dalam artikel kali ini ! gout masih menggunakan framework gatsbyJS dari react, masih meraba-raba di tengah kebutaan.<br />
mungkin di artikel kali ini gout hanya sedikit merekam dokumentasi dalam pembuatan single page posts di gatsbyJS.<br />
pertama gout mengelola query di graphql gatsbyJS.</p>

<p>buka user interface graphql <code class="language-plaintext highlighter-rouge">localhost:8000/___graphql</code> 
sebelum melakukan testing query untuk binding data di gatsby, kita mau ubah view user interface dari graphql nya dulu untuk menambah user experience dalam mengelola gatsby graphql ini dengan tampilan <code class="language-plaintext highlighter-rouge">playground</code> :</p>

<p><strong><em>stop service gatsbyny terlebih dahulu <code class="language-plaintext highlighter-rouge">ctrl+c</code></em></strong> kemudian install packagenya :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install --save-dev cross-env env-cmd
</code></pre></div></div>
<p>kemudian tambahkan package yang tadi di install, ke file <code class="language-plaintext highlighter-rouge">package.json</code> di direktori root</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>"develop": "gatsby develop"  

</code></pre></div></div>
<p>tambahkan package instance berikut :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>"GATSBY_GRAPHQL_IDE=playground" 
</code></pre></div></div>

<p>kemudian buat file baru dengan properti hidden di root direktori dengan nama</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.env.development 
</code></pre></div></div>

<p>kemudian tambahkan baris script berikut</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GATSBY_GRAPHQL_IDE=playground 
</code></pre></div></div>

<p>jalankan kembali server gatsbyJS nya</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm run develop 
</code></pre></div></div>

<p>kemudian buka kembali user interface graphql di link : <code class="language-plaintext highlighter-rouge">localhost:8000/___graphql</code><br />
seperti inilah tampilan graphql dengan package user interface playground:</p>

<p><img src="http://localhost:4000/assets/images/post/graphql-ui-gatsby.png" alt="graphQL" /></p>

<p>lakukan query diataranya untuk binding data dan melakukan slug untuk data di page posts nanti yang akan kita buat di bagian selanjutnya : 
gout melakukan beberapa query sepert dibawah ini, tambahkan query di box sebelah kiti :</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// query untuk metadata
query{
  site{
    siteMetadata {
      title
      author
    }
  }
}


//query buat markdown
query{
  allFile{
    edges {
      node {
        name
        extension
        dir
      }
    }
  }
}

// get slug post page 
query{
  allMarkdownRemark {
    edges{
      node {
        fields {
          slug
        }
      }
    }
  }
}

// get single slug posts tamplate

query (
  $slug: String!
){
  markdownRemark (
    fields: {
      slug: {
        eq: $slug
      }
    }
  ){
    frontmatter {
      title
    }
  }
}
</code></pre></div></div>
<p>kalian bisa telah sendiri hasil dari query graphQL diatas, untuk slug dan binding data. kalian coba telaah secara lebih spesifik. seperti ini contohnya :</p>

<p><img src="http://localhost:4000/assets/images/post/graphql2.png" alt="graphQL" /><br />
query diatas untuk binding metadata untuk di query di bagian page. kalian bisa coba baris perbaris atau buka perbaris dari script graphql diatas di tab baru di user interfacenya graphql.</p>

<h4 id="kemudian-selanjutnya-lagi-">kemudian selanjutnya lagi !</h4>
<p>selanjutnya ….. mulailah untuk membaca dokumentasinya, karena dalam artikel kali ini gout mau binding data di page gatsby untuk menyajikan fitur blog dengan gatsby.</p>
<ul>
  <li>
    <p>binding data untuk posts list di page blog
ini mengurutkan list post yang kita create di direktori root untuk posts kita. pertama kita buat dulu satu direktori baru di direktori <code class="language-plaintext highlighter-rouge">src/</code> dengan nama <code class="language-plaintext highlighter-rouge">posts/</code>, tambahkan beberapa file sebagai example post 
misalnya gout buat file <code class="language-plaintext highlighter-rouge">first-post.md</code> format penulisan post dengan markdown. setelah itu kita buka lagi direktori <code class="language-plaintext highlighter-rouge">pages</code> masih di direktori view utama gatsbyJS yaitu <code class="language-plaintext highlighter-rouge">src</code>.</p>

    <ul>
      <li>buka file <code class="language-plaintext highlighter-rouge">blog.js</code>
tambahkan baris code berikut :
        <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    import React from 'react'

    import { graphql, useStaticQuery } from 'gatsby'

    import { Link } from 'gatsby'

    import Layout from '../components/layout'



    const BlogPage = () =&gt; {

      const data = useStaticQuery(graphql`
        query {
          allMarkdownRemark {
            edges {
              node {
                frontmatter {
                  title
                  date
                }
                fields {
                  slug
                }
              }
            }
          }
        }
        `)

      //console.log(data);

      return (
        &lt;Layout&gt;
          &lt;h1&gt;My Blog&lt;/h1&gt;
          &lt;ol&gt;
            {data.allMarkdownRemark.edges.map((edge) =&gt; {
              return (
                &lt;li&gt;
                  &lt;Link to={`/blog/${edge.node.fields.slug}`}&gt;
                  &lt;h2&gt;{edge.node.frontmatter.title}&lt;/h2&gt;
                  &lt;p&gt;{edge.node.frontmatter.date}&lt;/p&gt;
                  &lt;/Link&gt;
                &lt;/li&gt;
                )
              })}
          &lt;/ol&gt;
        &lt;/Layout&gt;
        )
    }
    export default BlogPage
</code></pre></div>        </div>
        <p>file tersebut akan menampilkan daftar baris post di link <code class="language-plaintext highlighter-rouge">/blog/</code> seperti dibawah ini :</p>

        <p><img src="http://localhost:4000/assets/images/post/post-list-gatsby.png" alt="graphQL" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>binding data untuk single posts page
selanjutnya, setelah edit page <code class="language-plaintext highlighter-rouge">blog.js</code> kita kembali ke direktori root gatsby kita, kemudian buat satu file baru di root direktori, beri nama <code class="language-plaintext highlighter-rouge">gatsby-node.js</code> .<br />
seperti ini :</p>

    <p><img src="http://localhost:4000/assets/images/post/gatsby-direktori-1.png" alt="graphQL" /></p>

    <p>kemudian buka file <code class="language-plaintext highlighter-rouge">gatsby-node.js</code> copy baris code berikut :</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    const path = require('path')

    module.exports.onCreateNode = ({ node, actions }) =&gt; {
      const { createNodeField } = actions

      if(node.internal.type === 'MarkdownRemark'){
        const slug = path.basename(node.fileAbsolutePath, '.md');

        createNodeField({
          node,
          name: 'slug',
          value: slug
        })
      }

    }

    module.exports.createPages = async ({ graphql, actions }) =&gt; {

      const { createPage } = actions
      const blogTemplate = path.resolve('./src/templates/blog.js')
      const res = await graphql('
          query{
            allMarkdownRemark {
              edges {
                node {
                  fields {
                    slug
                  }
                }
              }
            }
          }
        ')

      res.data.allMarkdownRemark.edges.forEach((edge) =&gt; {
        createPage({
          component: blogTemplate,
          path: `/blog/${edge.node.fields.slug}`,
          context: {
            slug: edge.node.fields.slug
          }
        })
      })


    }
</code></pre></div>    </div>
    <p>dibagian file tersebut kita melakukan import module-module dan beberapa dependencies dari nodeJS.</p>
  </li>
  <li>
    <p>selanjutnya create post page<br />
untuk menampilkan post kita di gatsby kita buat satu direktori baru di direktori <code class="language-plaintext highlighter-rouge">src</code> beri nama <code class="language-plaintext highlighter-rouge">templates</code>, kemudian buat file baru di direktori <code class="language-plaintext highlighter-rouge">templates</code> beri nama <code class="language-plaintext highlighter-rouge">blog.js</code>. page ini nanti yang akan menampilkan single page untuk post kita. kemudian buka file <code class="language-plaintext highlighter-rouge">templates/blog.js</code> copy baris code berikut :</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    import React from 'react'

    import Layout from '../components/layout'

    export const query = graphql`query ($slug: String!){
          markdownRemark (fields: {slug: { eq: $slug } }){
            frontmatter {
              title
              date
            }
            html
        }
      }
    `

    const Blog = (props) =&gt; {
      return (

          &lt;Layout&gt;
            &lt;h1&gt;{props.data.markdownRemark.frontmatter.title}&lt;/h1&gt;
            &lt;small&gt;{props.data.markdownRemark.frontmatter.date}&lt;/small&gt;
            &lt;div dangerouslySetInnerHTML=&gt;&lt;/div&gt;
          &lt;/Layout&gt;

        )
    }

    export default Blog
</code></pre></div>    </div>
  </li>
  <li>
    <p>kemudian setup dibagian <code class="language-plaintext highlighter-rouge">gatsby-config.js</code>
buka kembali file <code class="language-plaintext highlighter-rouge">gatsby-config.js</code> di direktori root applikasi gatsbyJS kita :<br />
kemudian ubah baris script nya menjadi sepert dibawah ini :</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    // module.exports = {
    //   /* Your site config here */
    //   plugins: [],
    // }

    module.exports = {
      siteMetadata: {
        title: 'Full-Stack Developer',
        author: 'Puji Ermanto',
      },
      plugins: [
          'gatsby-plugin-sass',
          'react-router-dom',
          {
            resolve: "gatsby-source-filesystem",
            options: {
              name: 'src',
              path: `${__dirname}/src/`
            }
          },
         
          'gatsby-transformer-remark'
          ]
      }
</code></pre></div>    </div>
    <p>kita telah menambahkan beberapa configurasi untuk metadata dan path direktori untuk page. dalam artikel ini tujuannya untuk menyajikan post kita dalam sebuah halaman (page). baik itu untuk order list posts dan single page posts nya.<br />
agan-agan bisa lihat demo link nya di link berikut : 
<a href="https://pujermanto.netlify.app/blog/" target="_blank">Blog</a></p>
  </li>
</ul>

<p><strong><em>untuk bagian <code class="language-plaintext highlighter-rouge">gatsby-config.js</code> silahkan disesuaikan dengan yang agan-agan buat</em></strong>. akhir kata gout ucapkan terima kasih telah berkunjung dan membaca artikel ini dan tak lupa gout doakan semoga agan-agan semua selalu diberi nikmat sehat dan nikmat waktu luang. akhir kata ……</p>

<p>waasalamm….</p>

<p><strong><em>puji ermanto</em></strong></p>

:ET