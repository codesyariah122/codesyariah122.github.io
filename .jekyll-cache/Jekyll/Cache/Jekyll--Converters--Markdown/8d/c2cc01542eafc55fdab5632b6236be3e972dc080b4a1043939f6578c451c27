I"N<p>Ø¨Ø³Ù… Ø§Ù„Ù„Ù‡ Ø§Ù„Ø±Ø­Ù…Ù† Ø§Ù„Ø±Ø­ÙŠÙ…</p>

<p><img src="https://codesyariah122.github.io/assets/images/post/laravel-nginx.webp" alt="laradock" /></p>

<h3 id="setup-lingkungan-kerja-project-laravel">Setup lingkungan kerja project laravel</h3>
<p>Melanjutkan dari artikel sebelumnya masih membahas mengenai, lingkungan kerja dalam pengembangan project aplikasi menggunakan laravel.<br />
diartikel kali ini gout akan sedikit menjelaskan mengenai seting virtualhost <strong>nginx</strong> di laradock yang sebelumnya telah kita jalankan</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code><span class="nv">$ </span>docker-compose up <span class="nt">-d</span> nginx mysql phpmyadmin redis workspace
</code></pre></div></div>
<ol>
  <li>Setting hosts ( pengguna linux )<br />
langsung aja ketahap pertama yaitu setting host di mesin linux
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code><span class="nv">$ </span>nano /etc/hosts/
</code></pre></div>    </div>
    <p>Lalu tambahkan virtual domain yang akan kita pakai, misalnya untuk project aplikasi-laravelku yang sebelumnya telah gout persiapkan di artikel sebelumnya, kemudian kita akan assign domain <strong>aplikasi-laravelku.test</strong> maka tambahkan kode ini</p>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code>127.0.0.1 aplikasi-laravelku.test
</code></pre></div>    </div>
  </li>
  <li>Buat file konfigurasi nginx baru
    <ol>
      <li>Masuk folder laradock/nginx/sites</li>
      <li>copy laravel.conf.example menjadi aplikasi-laravelku.conf</li>
    </ol>
  </li>
</ol>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code><span class="nb">cp </span>laravel.conf.example aplikasi-laravelku.conf
</code></pre></div></div>
<ol>
  <li>Edit file aplikasi-laravelku.conf tersebut
 Ubah kode ini
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code>server_name laravel.test<span class="p">;</span>
root /var/www/laravel/public<span class="p">;</span>
</code></pre></div>    </div>
    <p><strong><em>Menjadi</em></strong></p>
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code>server_name aplikasi-laravelku.test<span class="p">;</span>
root /var/www/aplikasi-laravelku/public<span class="p">;</span>
</code></pre></div>    </div>
  </li>
  <li>Restart laradock container kita
Masuk ke folder laradock lalu jalankan perintah ini
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code><span class="nv">$ </span>docker-compose restart nginx
</code></pre></div>    </div>
  </li>
</ol>

<p>Dengan begitu setelah ini kamu cukup mengakses di browser dengan alamat http://aplikasi-aravelku.test tidak perlu lagi menggunakan http://localhost/aplikasi-laravelku/public.</p>

<blockquote>
  <p>Ketika membuat virtual domain, sebaiknya gunakan akhiran <code class="language-html highlighter-rouge">.test</code>. Hindari penggunaan <code class="language-html highlighter-rouge">.dev</code> karena
sudah tidak didukung.</p>
</blockquote>

<h2 id="varible-lingkungan">Varible Lingkungan</h2>
<p>Umumnya kita memerluan konfigurasi berbeda pada tahap pengembangan aplikasi dengan pada tahap
produksi. Misalnya kita menggunakan driver cache yang berbeda antara server lokal dengan server produksi.
Untuk memudahkan pengelolaan konfigurasi lingkungan, Laravel memanfaatkan DotEnv, sebuah pustaka
PHP karya Vance Lucas. Pada saat pertama kali kita membuat proyek Laravel baru, di direktori root aplikasi
kita terdapat file .env.example. Jika kita menginstall menggunakan composer, file ini otomatis diubah nama
menjadi .env. Jika belum, kita harus mengubah namanya secara manual. â€¦. Bersambung!</p>

<p><strong><em>Wassallaam</em></strong></p>
:ET