I"q<p><img src="http://localhost:4000/assets/images/post/nodejs-part2.png" alt="nodeJS_webserver" /></p>

<p>Hallo Coders !</p>

<p>apa kabarnya. dalam artikel kali ini gout mau berbagi sedikit tips, mengenai script untuk menjalankan server nodejs. sebelumnya kita mungkin menjalankan aplikasi server dengan command script</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>node server.js
</code></pre></div></div>
<p>dengan command diatas aplikasi kita sudah jalan di port yang kita setting di code berikut :</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// file server.js di direktori root</span>
<span class="kd">let</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">http</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">let</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">){</span>
	<span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">text/html</span><span class="dl">'</span><span class="p">});</span>
	<span class="nx">res</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="dl">'</span><span class="s1">Hello &lt;b&gt;World&lt;/b&gt;</span><span class="dl">'</span><span class="p">);</span>
	<span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>
<span class="p">});</span>

<span class="nx">server</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="mi">8999</span><span class="p">);</span>
</code></pre></div></div>
<p>tapi dengan script <code class="language-plaintext highlighter-rouge">node server.js</code>. jika kita melakukan perubahan code tidak secara langsung merubah keseluruhan view server, kita tetap harus menonaktifkan terlebih dahulu script server kita. kemudian menjalankan ulang dengan comman <code class="language-plaintext highlighter-rouge">node server.js</code>.<br />
ada cara lain seperti tadi di awal artikel ini dijelaskan, kita bisa menambahkan field script di file <code class="language-plaintext highlighter-rouge">package.json</code> supaya server melakukan update ketika kita melakukan perubahan pada code kita, kita bisa menggunakan <code class="language-plaintext highlighter-rouge">nodemon</code> untuk eksekusi aplikasi kita.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> npm <span class="nb">install </span>nodemon <span class="nt">--save</span>
</code></pre></div></div>
<p>dengan <code class="language-plaintext highlighter-rouge">nodemon</code> status server menjadi monitoring, dan akan secara langsung melakukan perubahan ketika ada perubahan di struktur code kita.<br />
dan untuk lebih flexibel lagi kita tambahkan ini ke field scripts di file <code class="language-plaintext highlighter-rouge">package.json</code>, buka file <code class="language-plaintext highlighter-rouge">package.json</code> kemudian copy baris code berikut :</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">  </span><span class="nl">"scripts"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"nodemon server.js"</span><span class="p">,</span><span class="w"> </span><span class="err">//tambahkan</span><span class="w"> </span><span class="err">bagian</span><span class="w"> </span><span class="err">ini</span><span class="w">
    </span><span class="nl">"test"</span><span class="p">:</span><span class="w"> </span><span class="s2">"echo </span><span class="se">\"</span><span class="s2">Error: no test specified</span><span class="se">\"</span><span class="s2"> &amp;&amp; exit 1"</span><span class="w">
  </span><span class="p">}</span><span class="err">,</span><span class="w">  
</span></code></pre></div></div>
<p>untuk menjalankan kembali server kita kita bisa menggunakan comman <code class="language-plaintext highlighter-rouge">npm start</code>, coba lakukan perubahan di file <code class="language-plaintext highlighter-rouge">server.js</code> kemudian lihat di browser server akan terus merespon setiap perubahan di code kita.</p>

<p>ok cukup sekian mengenai lanjutan artikel nodeJS kali ini, mudah-mudahan bermanfaat.</p>

<p>akhir kata gout ucapkan â€¦</p>

<p>wassalaam</p>

<p><strong><em>Puji Ermanto</em></strong></p>

:ET