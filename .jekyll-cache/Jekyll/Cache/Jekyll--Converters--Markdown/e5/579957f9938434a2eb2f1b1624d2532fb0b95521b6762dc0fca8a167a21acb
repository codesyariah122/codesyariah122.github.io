I"rC<h3 id="fitur-upload-gambar-dengan-metode-pdo-dan-jquery-ajax">Fitur upload gambar dengan metode PDO dan jquery-ajax</h3>
<p><img src="{{site.url}}/assets/images/post/crud_ajax_with_upload.gif" alt="upload_ajax" /></p>

<p>halo coders semuanya ….<br />
ini masih melanjutkan edisi crud data dengan ajax jquery dengan menggunakan metode php pdo ekstension sebagai sql universal interfacenya.  dalam artikel kali ini gout mau menambahkan fitur upload gambar kedalam aplikasi crud data sederhana menggunakan metode pdo dan ajax-jquery :</p>

<p><strong><em>menyambung dari artikel crud data ajax jquery, di artikel sebelumnya</em></strong></p>

<p><a href="https://codesyariah122.github.io/php/pdo/ajax/jquery/crud-data-dengan-jquery-ajax/" title="Crud data sederhana dengan ajax jquery">Crud data ajax jquery</a></p>

<p>dalam artikel sebelumnya tentang implementasi sebuah metode untuk live search.  sudah gout bahas beberapa minggu yang lalu. dari fitur live search tersebut sudah gout push juga ke repository gout yaitu di link dibawah ini :<br />
<a href="https://github.com/codesyariah122/crud-data-with-php-PDO-Jquery-ajax/tree/master" title="Crud data sederhana dengan ajax jquery">Crud data ajax jquery master</a></p>

<p>Dan kali ini dalam artikel terbaru ini gout mau mengimplementasikan fitur untuk upload image atau foto, dimana dalam fitur upload itu kita dapat menambahkan file yang berekstensi gambar untuk mempercantik tampilan frontend layout crudajax ini, dalam fitur upload tersebut kita membutuhkan sebuah element html yaitu <code class="language-plaintext highlighter-rouge">&lt;form&gt;</code> yang berisi attribut <code class="language-plaintext highlighter-rouge">enctype</code>, dimana enctype ini berisi nilai =<code class="language-plaintext highlighter-rouge">"multipart/form-data"</code> nilai ini merupakan keharusan jika kita ingin melakukan pengolahan file dengan serverside php di beckendnya.<br />
maka untuk itu gout akan merubah struktur source code di bagian file <code class="language-plaintext highlighter-rouge">contents/add.php</code> dan file <code class="language-plaintext highlighter-rouge">contents/edit.php</code> dimana kedua file tersebut kan berisi form input data dari frontend nya.</p>

<p>oh iya … dibagian database juga gout harus menambahkan 2 item baru, salah satunya untuk menampung nilai dari input file yang dipilih ketika melakukan process input data, sehingga didapatkan struktur table baru di database crudajax menjadi seperti ini :</p>

<p><img src="{{site.url}}/assets/images/post/database_upload_crud_ajax.png" alt="upload_ajax2" /></p>

<p>terlihat ada 2 item baru yaitu column dengan nama</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">product_image</code></li>
  <li><code class="language-plaintext highlighter-rouge">product_description</code><br />
kedua item baru ini akan ditambahkan juga di file <code class="language-plaintext highlighter-rouge">add.php</code> dan file <code class="language-plaintext highlighter-rouge">edit.php</code> , untuk item <code class="language-plaintext highlighter-rouge">product_image</code> akan kita gunakan <code class="language-plaintext highlighter-rouge">&lt;input type="file"&gt;</code> sedangkan untuk item <code class="language-plaintext highlighter-rouge">product_description</code> akan kita gunakan element input <code class="language-plaintext highlighter-rouge">&lt;textarea&gt;&lt;/textarea&gt;</code>. sehingga keseluruhan codenya gout rubah menjadi seperti berikut : 
<strong><em>file <code class="language-plaintext highlighter-rouge">contents/add.php</code></em></strong></li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php 
require_once '../functions.php';
if(@$_GET['page'] == 'add'):

  //addAjax($_POST, $_FILES, 'product');
  if(addAjax($_POST, $_FILES, 'product') &gt; 0):
    //usleep(700000);
    echo "success";
  endif;

else:



?&gt;

&lt;style type="text/css"&gt;
  li{
    list-style: none;
  }
  #close{
    margin-top: -0.7rem;
  }
&lt;/style&gt;

&lt;fieldset class="card mt-5 mb-5"&gt;

  &lt;div class="row justify-content-end"&gt;
    &lt;button id="close" class="btn btn-lg"&gt;&lt;i class="far fa-fw fa-lg fa-window-close"&gt;&lt;/i&gt;&lt;/button&gt;  
  &lt;/div&gt;

  &lt;h4 class="text-primary text-center mt-2"&gt;Add New Product&lt;/h4&gt;

&lt;div class="col mx-auto"&gt;
  &lt;ul&gt;
    &lt;form method="post" enctype="multipart/form-data"&gt;
      &lt;li&gt;
        &lt;label for="productcode"&gt;Product Code&lt;/label&gt;
        &lt;input type="text" id="productcode" class="form-control"&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;div class="form-group"&gt;
           &lt;label for="productimage"&gt;Choose file&lt;/label&gt;
           &lt;input type="file" class="form-control-file" id="productimage"&gt;
         &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;label for="productname"&gt;Product Name&lt;/label&gt;
        &lt;input type="text" id="productname" class="form-control"&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;label for="productdescription"&gt;Product Description&lt;/label&gt;
          &lt;textarea class="form-control" id="productdescription" cols="5" rows="3"&gt;&lt;/textarea&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;label for="productprice"&gt;Product Price&lt;/label&gt;
        &lt;input type="number" id="productprice" class="form-control"&gt;
      &lt;/li&gt;
    &lt;/form&gt;   
    &lt;li&gt;
      &lt;button id="add" class="mt-5 btn btn-primary btn-lg"&gt;Add Product&lt;/button&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;


&lt;/fieldset&gt;

&lt;?php endif; ?&gt;
</code></pre></div></div>

<p>untuk fungsi insert data nya masih menggunakan fungsi <code class="language-plaintext highlighter-rouge">addAjax()</code> dari file <code class="language-plaintext highlighter-rouge">functions.php</code> namun gout menambahkan  satu parameter baru yaitu super global variable <code class="language-plaintext highlighter-rouge">$_FILES</code> untuk menampung nilai input dari file input di element form html. terdapat 2 item baru ditambahkan di element form add ini yaitu <code class="language-plaintext highlighter-rouge">&lt;input type="file"&gt;</code> dan <code class="language-plaintext highlighter-rouge">&lt;textarea&gt;&lt;/textarea&gt;</code> . sedangkan untuk file <code class="language-plaintext highlighter-rouge">edit.php</code> tidak jauh berbeda isinya gout menambahkan 2 item baru tersebut di element form edit, sehingga menjadi seperti dibawah ini :</p>

<p><strong><em>file <code class="language-plaintext highlighter-rouge">contents/edit.php</code></em></strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php  
require_once '../functions.php';

$id = @$_POST['id'];

$viewById = view("SELECT * FROM `product` WHERE `id` = '$id'");

//var_dump($viewById);

if(@$_GET['page'] == 'edit'):

  if(editAjax($_POST, $_FILES, 'product') &gt; 0):
    echo "success"; 
  endif;

else:
?&gt;
&lt;style type="text/css"&gt;
  li{
    list-style: none;
  }
  #close{
    margin-top:-0.7rem;
  }
&lt;/style&gt;

&lt;fieldset class="card mt-5 mb-5"&gt;

  &lt;div class="row justify-content-end"&gt;
    &lt;button id="close" class="btn btn-lg"&gt;&lt;i class="far fa-fw fa-lg fa-window-close"&gt;&lt;/i&gt;&lt;/button&gt;
  &lt;/div&gt;

  &lt;h4 class="text-info text-center mt-2"&gt;&lt;b&gt;Edit Product Data&lt;/b&gt;&lt;/h4&gt;

&lt;div class="col mx-auto"&gt;
  &lt;ul&gt;
    &lt;form method="post" enctype="multipart/form-data"&gt;
      &lt;input type="hidden" id="productid" value="&lt;?=$viewById[0]['id']?&gt;"&gt;
      &lt;li&gt;        
        &lt;label for="productcode"&gt;Product Code&lt;/label&gt;
        &lt;input type="text" id="productcode" class="form-control" value="&lt;?=$viewById[0]['product_code']?&gt;"&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;img src="assets/images/&lt;?=$viewById[0]['product_image']?&gt;" width="200" height="200" class="img-responsive mt-2"&gt;
        &lt;div class="form-group"&gt;
           &lt;label for="productimage"&gt;Choose file for upload&lt;/label&gt;
           &lt;input type="file" class="form-control-file" id="productimage" value="&lt;?=$viewById[0]['product_image']?&gt;"&gt;
         &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;label for="productname"&gt;Product Name&lt;/label&gt;
        &lt;input type="text" id="productname" class="form-control" value="&lt;?=$viewById[0]['product_name']?&gt;"&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;label for="productdescription"&gt;Product Description&lt;/label&gt;
          &lt;textarea class="form-control" id="productdescription" cols="5" rows="3"&gt;
            &lt;?=$viewById[0]['product_description']?&gt;
          &lt;/textarea&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;label for="productprice"&gt;Product Price&lt;/label&gt;
        &lt;input type="number" id="productprice" class="form-control" value="&lt;?=$viewById[0]['product_price']?&gt;"&gt;
      &lt;/li&gt;
    &lt;/form&gt;
    &lt;li&gt;
      &lt;button id="edit" class="mt-5 btn btn-primary btn-lg"&gt;Edit Product&lt;/button&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;


&lt;/fieldset&gt;

&lt;?php endif; ?&gt;
</code></pre></div></div>
<p>hampir sama dengan file <code class="language-plaintext highlighter-rouge">add.php</code> hanya saja untuk edit ini seperti biasa nilai nya sudah di definisikan dari data yang ada di database. sehingga di tiap bagian input ditambahkan attribute <code class="language-plaintext highlighter-rouge">value="&lt;?=$viewById[0]['field_database']?&gt;"</code>, sedangkan untuk penggunaan fungsi update masih sama dari sebelumnya yakni masih menggunakaan fungsi <code class="language-plaintext highlighter-rouge">editAjax()</code> dan gout menambahkan satu parameter baru sama seperti file <code class="language-plaintext highlighter-rouge">add.php</code> yang tidak lain adalah parameter <code class="language-plaintext highlighter-rouge">$_FILES</code> sebagai super global yang menangani inputan data berupa file browser.</p>

<h1 id="lanjut-ke-bagian-utama-di-aplikasi-crudajax-ini">lanjut ke bagian utama di aplikasi crudajax ini</h1>
<h3 id="file-functionsphp">file <code class="language-plaintext highlighter-rouge">functions.php</code></h3>
<p>didalam file functions.php gout merubah algorithma data pada bagian fungsi <code class="language-plaintext highlighter-rouge">function addAjax(){}</code> dan fungsi <code class="language-plaintext highlighter-rouge">function editAjax(){}</code> kemudian menambah satu fungsi tambahan sebagai fungsi yang bertanggung jawab dalam menjalankan fitur upload file atau dalam hal ini file yang ditangani adalah file yang berekstensi image(gambar/foto). sehingga secara keseluruhan file <code class="language-plaintext highlighter-rouge">functions.php</code> setelah gout lakukan perombakan dan penambahan satu fungsi ajah sih sebenernya cuma biar sedikit dramatis gitu artikelnya, hehehe. menjadi seperti ini :</p>

<p><strong><em>file <code class="language-plaintext highlighter-rouge">functions.php</code></em></strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?php
require_once 'config.php';

function layout($dir, $file, $ext){
  //global $dir;
  if(file_exists($dir.'/'.$file.$ext)){
    require_once $dir.'/'.$file.$ext;
  }else{
    echo "&lt;h1 class='text-danger text-center'&gt;Layout Not Found&lt;/h1&gt;";
  }
}

function connect(){
  $dbhost = DB_HOST;
  $dbname = DB_NAME;
  $dbuser = DB_USER;
  $dbpass = DB_PASS;

  try{
    $conn = new PDO("mysql:host=$dbhost;dbname=$dbname", $dbuser, $dbpass);
    $conn-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    //echo "Connection succesfully added";
    return $conn;
  }catch(PDOException $e){
    echo "Connection failed ".$e-&gt;getMessage();
  }
}


function view($query){
  $dbh = connect();
  try{
    $dbh-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    $sql = $dbh-&gt;query($query);
    $rows=[];

    while($row = $sql-&gt;fetch(PDO::FETCH_ASSOC)):
      $rows[] = $row;
    endwhile;

    return $rows;
  }catch(PDOException $e){
    echo $e-&gt;getMessage();
  }
}


function addAjax($data, $file, $table){
  // var_dump(@$file);
  // var_dump(@$data);

  $dbh = connect();
  $productCode = @$data['productcode'];
  $productImage = upload($file, '../assets/images/');
  $productName = @$data['productname'];
  $productDesc = @$data['productdescription'];
  $productPrice = @$data['productprice'];

  if(!$productImage){
    $productImage = 'no-product-image.png';
  }

  $insertProduct = $dbh-&gt;prepare("INSERT INTO `$table` (id, product_code, product_image, product_name, product_description, product_price) VALUES ('', ?, ?, ?, ?, ?)");
  $insertProduct-&gt;bindParam(1, $productCode);
  $insertProduct-&gt;bindParam(2, $productImage);
  $insertProduct-&gt;bindParam(3, $productName);
  $insertProduct-&gt;bindParam(4, $productDesc);
  $insertProduct-&gt;bindParam(5, $productPrice);

  $insertProduct-&gt;execute();

  return $insertProduct-&gt;rowCount();
}

function editAjax($data, $file, $table){
  $productCode = @$data['productcode'];
  $productImage = @$data['productimage'];
  $productName = @$data['productname'];
  $productDesc = @$data['productdescription'];
  $productPrice = @$data['productprice'];
  $productId = @$data['productid'];

  if(!$productImage){
    $productImage = upload($file, '../assets/images/');
  }elseif(empty($productImage)){
    $productImage = 'no-product-image.png';
  }


  $dbh = connect();

  $edit = $dbh-&gt;prepare("UPDATE `$table` SET product_code = ?, product_image = ?, product_name = ?, product_description = ?, product_price = ? WHERE `id` = ?");
  $edit-&gt;execute([$productCode, $productImage, $productName, $productDesc, $productPrice, $productId]);

  return $edit-&gt;rowCount();
}

function deleteAjax($data, $table){
  $dbh = connect();
  $id = @$data['id'];
  $delete = $dbh-&gt;prepare("DELETE FROM `$table` WHERE `id` = :id");
  $delete-&gt;bindParam(":id", $id);

  $delete-&gt;execute();

  return $delete-&gt;rowCount();
}

function searchData($keyword){
  $query = "SELECT * FROM `product` WHERE 
        `product_code` LIKE '%$keyword' OR
        `product_name` LIKE '%$keyword%' OR 
        `product_price` LIKE '%$keyword%'
        ORDER BY `id` DESC
  ";

  return view($query);
}

function upload($file, $dir){
  $namaFile = @$file['productimage']['name'];
  $ukuranFile = @$file['productimage']['size'];
  $error = @$file['productimage']['error'];
  $tmpName = @$file['productimage']['tmp_name'];

  // validasi error
  if($error === 4){
    $empty = true;
    if(isset($empty)){
      echo "Image not upload";
    }
    return false;
  }

  // validasi ekstensi gambar
  $ekstensiValid = ['jpg', 'jpeg', 'png', 'gif'];
  $ekstensiGambar = explode('.', $namaFile);
  $ekstensiGambar = strtolower(end($ekstensiGambar));
  echo $ekstensiGambar;

    if(!in_array($ekstensiGambar, $ekstensiValid)){
      $noEkstensi = true;
      if(isset($noEkstensi)){
        echo "File no image";
      }
    return false;
    }
  // cek ukuran gambar
    if($ukuranFile &gt; 700000){
      $sizeError = true;
      if(isset($sizeError)){
        echo "File image is too big";
      }
      return false;
    }

  // lolos pengecekan

  $namaFileBaru = uniqid();
  $namaFileBaru .= '.';
  $namaFileBaru .= $ekstensiGambar;

  // lakukan process upload
  move_uploaded_file($tmpName, $dir.$namaFileBaru);

  return $namaFileBaru;

}
</code></pre></div></div>

<p>nah terlihat bukan perbedaannya dari file <code class="language-plaintext highlighter-rouge">functions.php</code> dari artikel sebelumnya, struktur alur data pada fungsi <code class="language-plaintext highlighter-rouge">addAjax(){}</code> dan <code class="language-plaintext highlighter-rouge">editAjax(){}</code> ada sedikit penambahan. dan pada baris paling bawah ditambahkan juga fungsi yang paling krusialnya yaitu fungsi <code class="language-plaintext highlighter-rouge">upload(){}</code> yang bertindak sebagai root program di artikel gout kali ini.</p>

<p><em>untuk keseluruhan</em> source code dan kelengkapan data yang lebih detail agan-agan dan coders semua bisa meluncur ke repositori crudajax di link dibawah ini : 
<a href="https://github.com/codesyariah122/crud-data-with-php-PDO-Jquery-ajax/tree/with_upload" title="Crud data sederhana dengan ajax jquery">Repo Crud data ajax jquery</a><br />
dari link tersebut agan-agan dan coders! semua bisa melanjutkan algoritma lainnya mungkin, karena di repository tersebut juga gout menambahkan beberapa tambahan dari sisi frontend nya, diantaranya:  gout menambahkan popup modal dari bootstrap untuk menampilkan detail data product di table product kemudian gout mengubah struktur html dari file-file yang di load oleh jquery, bisa aga-agan telisik dari link repository tersebut.</p>

<p><strong><em>akhir kata</em></strong> gout ucapkan terima kasih</p>

<p>dan semangat dalam belajar dan bekerja</p>

<p>wassalam .</p>

<p>gout : puji ermanto - seorang kaki tangan kapitalis metropolitan</p>
:ET