I"é<p><img src="https://codesyariah122.github.io/assets/images/post/repl-node.jpe" alt="nodeJS_webserver" /></p>

<h3 id="membuat-aplikasi-nodejs">Membuat aplikasi Node.js</h3>
<p>Meskipun terminal <code class="language-html highlighter-rouge">REPL</code> membantu kita dalam menguji perintah-perintah JavaScript, tapi aplikasi Node.js selalu ditulis dalam bentuk file. Selanjutnya, file tersebut dieksekusi oleh Node.js.<br />
Sebagai contoh, tulis kode di bawah ini lalu simpan dengan nama <code class="language-html highlighter-rouge">hello.js</code>  :</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="syntax"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello world</span><span class="dl">"</span><span class="p">)</span>
</code></pre></div></div>

<p>untuk mengeksekusi file diatas, gunakan perintah berikut :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code>root@codesyariah:/home/puji122/nodeJS_basic# node hello.js
Hallo NodeJS
root@codesyariah:/home/puji122/nodeJS_basic# 
</code></pre></div></div>
<p>Cara lain mengeksekusi file <code class="language-html highlighter-rouge">hello.js</code> di atas adalah dengan menambahkan mode <code class="language-html highlighter-rouge">execute</code> ke dalam file tersebut, kemudian eksekusi dilakukan menggunakan perintah <code class="language-html highlighter-rouge">./hello.js</code>. untuk menggunakan cara ini, kita perlu menyertakan <code class="language-html highlighter-rouge">interpreter</code> Node.js pada baris pertama kode, seperti berikut :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code><span class="c">#!/usr/local/bin/node</span>
console.log<span class="o">(</span><span class="s2">"Hello World"</span><span class="o">)</span>
</code></pre></div></div>

<p>tambahkan mode <code class="language-html highlighter-rouge">execute</code> ke dalam file <code class="language-html highlighter-rouge">hello.js</code> menggunakan perintah berikut :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code>root@codesyariah:/home/puji122/nodeJS_basic# <span class="nb">chmod</span> +x hello.js
</code></pre></div></div>
<p>untuk mengeksekusi file <code class="language-html highlighter-rouge">hello.js</code>, gunakan perintah berikut ini :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code>root@codesyariah:/home/puji122/nodeJS_basic# ./hello.js
Hallo NodeJS
root@codesyariah:/home/puji122/nodeJS_basic#
</code></pre></div></div>

<p>pada bagian <code class="language-html highlighter-rouge">#!/usr/local/bin/node</code> baris tersebut menunjukan lokasi dari interpreter NodeJs(node) yang berada di direktori <code class="language-html highlighter-rouge">/usr/local/bin/node</code> sebenarnya hanya merupakan file yang berperan sebagai <code class="language-html highlighter-rouge">symbolic link</code> dan menunjuk ke file <code class="language-html highlighter-rouge">/usr/local/nodejs/bin/node</code>. Dengan demikian, coders semua bisa saja mengganti kode diatas menjadi seperti berikut :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code><span class="c">#!/usr/local/nodejs/bin/node</span>
</code></pre></div></div>

<h3 id="mengenal-program-npm">Mengenal program npm</h3>
<p>{program} <code class="language-html highlighter-rouge">npm</code> merupakan progam <code class="language-html highlighter-rouge">package manager</code> standart di dalam javascript, yang memiliki cara kerja seperti <code class="language-html highlighter-rouge">pip</code> di <code class="language-html highlighter-rouge">python</code>, <code class="language-html highlighter-rouge">gem</code> di <code class="language-html highlighter-rouge">ruby</code> maupun <code class="language-html highlighter-rouge">composer</code> di <code class="language-html highlighter-rouge">PHP</code>. Dengan npm, kita dapat melakukan instalasi suatu <code class="language-html highlighter-rouge">paket/modul</code> atau pustaka (library) tertentu dengan mudah. jika modul yang kita pasang memiliki ketergantungan dengan modul-modul lain, maka npm secara otomatis akan memasang juga modul-modul yang dibutuhkan. Contoh penggunaan npm untuk melakukan instalasi modul <code class="language-html highlighter-rouge">Express JS</code> ( Framework untuk Node JS) adalah sebagai berikut :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code>npm <span class="nb">install </span>express
</code></pre></div></div>
<p>untuk menjalankan program npm, kita memerlukan koneksi internet.</p>

<h3 id="mengenal-program-nodemon">Mengenal program nodemon</h3>
<p>Pada saat pembuatan aplikasi berlangsung kita akan banyak melakukan perubahan terhadap kode program. Untuk menguji hasil dari perubahan tersebut kita perlu menjalankan ulang aplikasi agar server tersebut dapat membaca kode terbaru. Jika anda coders! tirak terlalu nyaman dengan pekerjaan sepert ini, maka coders dapat menggunakan program <a href="https://nodemon.io">NodeMon</a>. program ini akan memonitor perubahan yang terjadi secara pada kode dan menjalankan ulang aplikasi secara otomatis. Dengan demikian, coders tidak perlu menjalankan dan mengentikan aplikasi secara berulang-ulang.</p>

<p>installasi program nodemon dapat dilakukan dengan mudah menggunakan <code class="language-html highlighter-rouge">npm</code>, yaitu dengan menulis perintah di bawah ini ke dalam terminal(linux shell) atau <code class="language-html highlighter-rouge">command prompt</code> jika anda bekerja dengan windows.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code>npm <span class="nb">install</span> <span class="nt">-g</span> nodemon
</code></pre></div></div>

<p>karena kita memasang Node.js di dalam direktori <code class="language-html highlighter-rouge">/usr/local/nodejs</code>, maka nodemon perlu dipanggil menggunakan perintah <code class="language-html highlighter-rouge">/usr/local/nodejs/bin/nodemon</code>. Agar proses pemanggilannya lebih sederhana, kita perlu membuat <code class="language-html highlighter-rouge">symbolic link</code> di dalam direktori <code class="language-html highlighter-rouge">/usr/bin</code> menggunakan perintah berikut :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code><span class="nb">ln</span> <span class="nt">-s</span> /usr/local/nodejs/bin/nodemon /usr/bind/nodemon
</code></pre></div></div>

<p>Selanjutnya, untuk menjalankan aplikasi ( misalnya: hello.js ) yang tadi telah kita buat bersama-sama, gunakan perintah <code class="language-html highlighter-rouge">nodemon</code>, bukan <code class="language-html highlighter-rouge">node</code>, seperti berikut :</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="syntax"><code>nodemon hello.js
</code></pre></div></div>

:ET